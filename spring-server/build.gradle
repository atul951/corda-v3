buildscript {
    ext.kotlin_version = '1.2.30'
    ext.spring_boot_version = '1.5.7.RELEASE'
    ext.spring_version = '4.3.11.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
    }
}

group 'com.template'
version '0.1'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.0"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0"
    compile("io.springfox:springfox-swagger2:2.7.0")
    compile("io.springfox:springfox-swagger-ui:2.7.0")
    compile fileTree(dir: '../cordapp/build/libs', include: ['cordapp-*.jar'])
    compile fileTree(dir: '../cordapp-contracts-states/build/libs', include: ['cordapp-contracts-states*.jar'])

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "junit:junit:$junit_version"


    compile "net.corda:corda-core:$corda_release_version"
    compile "net.corda:corda-jackson:$corda_release_version"
    compile "net.corda:corda-rpc:$corda_release_version"
    compile "net.corda:corda-node-api:$corda_release_version"

    compile("org.springframework.boot:spring-boot-starter-web:$spring_boot_version")

}

jar {
    manifest {
        attributes "Main-Class" : "com.template.server.ServerKt"
        attributes "Class-Path" : configurations.compile.collect { it.getName() }.join(' ')
    }
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

task runBCSServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.server.ServerKt'
    environment "server.port", "8081"
}

task runBOAServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.server.ServerKt'
    environment "server.port", "8082"
    environment "config.rpc.username", "user1"
    environment "config.rpc.password", "test"
    environment "config.rpc.host", "localhost"
    environment "config.rpc.port", "10009"
}

